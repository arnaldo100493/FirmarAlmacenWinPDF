// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   IMAPFolder.java

package com.sun.mail.imap;

import java.io.IOException;
import java.io.OutputStream;

class LengthCounter extends OutputStream
{

    public LengthCounter(int maxsize)
    {
        size = 0;
        buf = new byte[8192];
        this.maxsize = maxsize;
    }

    public void write(int b)
    {
        int newsize = size + 1;
        if(buf != null)
            if(newsize > maxsize && maxsize >= 0)
                buf = null;
            else
            if(newsize > buf.length)
            {
                byte newbuf[] = new byte[Math.max(buf.length << 1, newsize)];
                System.arraycopy(buf, 0, newbuf, 0, size);
                buf = newbuf;
                buf[size] = (byte)b;
            } else
            {
                buf[size] = (byte)b;
            }
        size = newsize;
    }

    public void write(byte b[], int off, int len)
    {
        if(off < 0 || off > b.length || len < 0 || off + len > b.length || off + len < 0)
            throw new IndexOutOfBoundsException();
        if(len == 0)
            return;
        int newsize = size + len;
        if(buf != null)
            if(newsize > maxsize && maxsize >= 0)
                buf = null;
            else
            if(newsize > buf.length)
            {
                byte newbuf[] = new byte[Math.max(buf.length << 1, newsize)];
                System.arraycopy(buf, 0, newbuf, 0, size);
                buf = newbuf;
                System.arraycopy(b, off, buf, size, len);
            } else
            {
                System.arraycopy(b, off, buf, size, len);
            }
        size = newsize;
    }

    public void write(byte b[])
        throws IOException
    {
        write(b, 0, b.length);
    }

    public int getSize()
    {
        return size;
    }

    public byte[] getBytes()
    {
        return buf;
    }

    private int size;
    private byte buf[];
    private int maxsize;
}
