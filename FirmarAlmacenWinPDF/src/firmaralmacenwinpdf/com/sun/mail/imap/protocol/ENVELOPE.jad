// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   ENVELOPE.java

package com.sun.mail.imap.protocol;

import com.sun.mail.iap.ParsingException;
import com.sun.mail.iap.Response;
import java.util.Date;
import java.util.Vector;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MailDateFormat;

// Referenced classes of package com.sun.mail.imap.protocol:
//            IMAPAddress, Item, FetchResponse

public class ENVELOPE
    implements Item
{

    public ENVELOPE(FetchResponse r)
        throws ParsingException
    {
        date = null;
        msgno = r.getNumber();
        r.skipSpaces();
        if(r.readByte() != 40)
            throw new ParsingException("ENVELOPE parse error");
        String s = r.readString();
        if(s != null)
            try
            {
                date = mailDateFormat.parse(s);
            }
            catch(Exception pex) { }
        subject = r.readString();
        from = parseAddressList(r);
        sender = parseAddressList(r);
        replyTo = parseAddressList(r);
        to = parseAddressList(r);
        cc = parseAddressList(r);
        bcc = parseAddressList(r);
        inReplyTo = r.readString();
        messageId = r.readString();
        if(r.readByte() != 41)
            throw new ParsingException("ENVELOPE parse error");
        else
            return;
    }

    private InternetAddress[] parseAddressList(Response r)
        throws ParsingException
    {
        r.skipSpaces();
        byte b = r.readByte();
        if(b == 40)
        {
            Vector v = new Vector();
            do
            {
                IMAPAddress a = new IMAPAddress(r);
                if(!a.isEndOfGroup())
                    v.addElement(a);
            } while(r.peekByte() != 41);
            r.skip(1);
            InternetAddress a[] = new InternetAddress[v.size()];
            v.copyInto(a);
            return a;
        }
        if(b == 78 || b == 110)
        {
            r.skip(2);
            return null;
        } else
        {
            throw new ParsingException("ADDRESS parse error");
        }
    }

    static final char name[] = {
        'E', 'N', 'V', 'E', 'L', 'O', 'P', 'E'
    };
    public int msgno;
    public Date date;
    public String subject;
    public InternetAddress from[];
    public InternetAddress sender[];
    public InternetAddress replyTo[];
    public InternetAddress to[];
    public InternetAddress cc[];
    public InternetAddress bcc[];
    public String inReplyTo;
    public String messageId;
    private static MailDateFormat mailDateFormat = new MailDateFormat();

}
