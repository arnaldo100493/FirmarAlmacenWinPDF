// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   LogOutputStream.java

package com.sun.mail.util;

import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;

// Referenced classes of package com.sun.mail.util:
//            MailLogger

public class LogOutputStream extends OutputStream
{

    public LogOutputStream(MailLogger logger)
    {
        lastb = -1;
        buf = new byte[80];
        pos = 0;
        this.logger = logger;
        level = Level.FINEST;
    }

    public void write(int b)
        throws IOException
    {
        if(!logger.isLoggable(level))
            return;
        if(b == 13)
            logBuf();
        else
        if(b == 10)
        {
            if(lastb != 13)
                logBuf();
        } else
        {
            expandCapacity(1);
            buf[pos++] = (byte)b;
        }
        lastb = b;
    }

    public void write(byte b[])
        throws IOException
    {
        write(b, 0, b.length);
    }

    public void write(byte b[], int off, int len)
        throws IOException
    {
        int start = off;
        if(!logger.isLoggable(level))
            return;
        len += off;
        for(int i = start; i < len; i++)
        {
            if(b[i] == 13)
            {
                expandCapacity(i - start);
                System.arraycopy(b, start, buf, pos, i - start);
                pos += i - start;
                logBuf();
                start = i + 1;
            } else
            if(b[i] == 10)
            {
                if(lastb != 13)
                {
                    expandCapacity(i - start);
                    System.arraycopy(b, start, buf, pos, i - start);
                    pos += i - start;
                    logBuf();
                }
                start = i + 1;
            }
            lastb = b[i];
        }

        if(len - start > 0)
        {
            expandCapacity(len - start);
            System.arraycopy(b, start, buf, pos, len - start);
            pos += len - start;
        }
    }

    protected void log(String msg)
    {
        logger.log(level, msg);
    }

    private void logBuf()
    {
        String msg = new String(buf, 0, pos);
        pos = 0;
        log(msg);
    }

    private void expandCapacity(int len)
    {
        byte nb[];
        for(; pos + len > buf.length; buf = nb)
        {
            nb = new byte[buf.length * 2];
            System.arraycopy(buf, 0, nb, 0, pos);
        }

    }

    protected MailLogger logger;
    protected Level level;
    private int lastb;
    private byte buf[];
    private int pos;
}
