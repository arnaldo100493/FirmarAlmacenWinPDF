// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   CMSAuthenticatedGenerator.java

package org.bouncycastle.cms;

import java.io.IOException;
import java.security.*;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.InvalidParameterSpecException;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.RC2ParameterSpec;
import org.bouncycastle.asn1.DERObjectIdentifier;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;

// Referenced classes of package org.bouncycastle.cms:
//            CMSEnvelopedGenerator, CMSException, CMSEnvelopedHelper, CMSAttributeTableGenerator

public class CMSAuthenticatedGenerator extends CMSEnvelopedGenerator
{

    public CMSAuthenticatedGenerator()
    {
    }

    public CMSAuthenticatedGenerator(SecureRandom rand)
    {
        super(rand);
    }

    protected AlgorithmIdentifier getAlgorithmIdentifier(String encryptionOID, AlgorithmParameterSpec paramSpec, Provider provider)
        throws IOException, NoSuchAlgorithmException, InvalidParameterSpecException
    {
        AlgorithmParameters params = CMSEnvelopedHelper.INSTANCE.createAlgorithmParameters(encryptionOID, provider);
        params.init(paramSpec);
        return getAlgorithmIdentifier(encryptionOID, params);
    }

    protected AlgorithmParameterSpec generateParameterSpec(String encryptionOID, SecretKey encKey, Provider encProvider)
        throws CMSException
    {
        AlgorithmParameterGenerator pGen;
        AlgorithmParameters p;
        try
        {
            if(encryptionOID.equals(RC2_CBC))
            {
                byte iv[] = new byte[8];
                rand.nextBytes(iv);
                return new RC2ParameterSpec(encKey.getEncoded().length * 8, iv);
            }
        }
        catch(GeneralSecurityException e)
        {
            return null;
        }
        pGen = CMSEnvelopedHelper.INSTANCE.createAlgorithmParameterGenerator(encryptionOID, encProvider);
        p = pGen.generateParameters();
        return p.getParameterSpec(javax/crypto/spec/IvParameterSpec);
    }

    public void setAuthenticatedAttributeGenerator(CMSAttributeTableGenerator authGen)
    {
        this.authGen = authGen;
    }

    public void setUnauthenticatedAttributeGenerator(CMSAttributeTableGenerator unauthGen)
    {
        this.unauthGen = unauthGen;
    }

    protected Map getBaseParameters(DERObjectIdentifier contentType, AlgorithmIdentifier digAlgId, byte hash[])
    {
        Map param = new HashMap();
        param.put("contentType", contentType);
        param.put("digestAlgID", digAlgId);
        param.put("digest", hash.clone());
        return param;
    }

    protected CMSAttributeTableGenerator authGen;
    protected CMSAttributeTableGenerator unauthGen;
}
