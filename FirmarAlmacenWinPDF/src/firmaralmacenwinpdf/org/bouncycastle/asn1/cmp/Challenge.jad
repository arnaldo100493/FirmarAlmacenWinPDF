// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   Challenge.java

package org.bouncycastle.asn1.cmp;

import org.bouncycastle.asn1.*;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;

public class Challenge extends ASN1Encodable
{

    private Challenge(ASN1Sequence seq)
    {
        int index = 0;
        if(seq.size() == 3)
            owf = AlgorithmIdentifier.getInstance(seq.getObjectAt(index++));
        witness = ASN1OctetString.getInstance(seq.getObjectAt(index++));
        challenge = ASN1OctetString.getInstance(seq.getObjectAt(index));
    }

    public static Challenge getInstance(Object o)
    {
        if(o instanceof Challenge)
            return (Challenge)o;
        if(o instanceof ASN1Sequence)
            return new Challenge((ASN1Sequence)o);
        else
            throw new IllegalArgumentException((new StringBuilder()).append("Invalid object: ").append(o.getClass().getName()).toString());
    }

    public AlgorithmIdentifier getOwf()
    {
        return owf;
    }

    public DERObject toASN1Object()
    {
        ASN1EncodableVector v = new ASN1EncodableVector();
        addOptional(v, owf);
        v.add(witness);
        v.add(challenge);
        return new DERSequence(v);
    }

    private void addOptional(ASN1EncodableVector v, ASN1Encodable obj)
    {
        if(obj != null)
            v.add(obj);
    }

    private AlgorithmIdentifier owf;
    private ASN1OctetString witness;
    private ASN1OctetString challenge;
}
