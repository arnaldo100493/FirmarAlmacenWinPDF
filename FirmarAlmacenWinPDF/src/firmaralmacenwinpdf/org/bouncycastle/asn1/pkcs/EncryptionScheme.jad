// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   EncryptionScheme.java

package org.bouncycastle.asn1.pkcs;

import org.bouncycastle.asn1.*;
import org.bouncycastle.asn1.x509.AlgorithmIdentifier;

public class EncryptionScheme extends AlgorithmIdentifier
{

    public EncryptionScheme(DERObjectIdentifier objectId, DEREncodable parameters)
    {
        super(objectId, parameters);
    }

    EncryptionScheme(ASN1Sequence seq)
    {
        this((DERObjectIdentifier)seq.getObjectAt(0), seq.getObjectAt(1));
    }

    public static final AlgorithmIdentifier getInstance(Object obj)
    {
        if(obj instanceof EncryptionScheme)
            return (EncryptionScheme)obj;
        if(obj instanceof ASN1Sequence)
            return new EncryptionScheme((ASN1Sequence)obj);
        else
            throw new IllegalArgumentException((new StringBuilder()).append("unknown object in factory: ").append(obj.getClass().getName()).toString());
    }

    public DERObject getObject()
    {
        return (DERObject)getParameters();
    }

    public DERObject getDERObject()
    {
        ASN1EncodableVector v = new ASN1EncodableVector();
        v.add(getObjectId());
        v.add(getParameters());
        return new DERSequence(v);
    }
}
