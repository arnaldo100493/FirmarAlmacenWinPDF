// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   IssuerSerial.java

package org.bouncycastle.asn1.x509;

import org.bouncycastle.asn1.*;

// Referenced classes of package org.bouncycastle.asn1.x509:
//            GeneralNames

public class IssuerSerial extends ASN1Encodable
{

    public static IssuerSerial getInstance(Object obj)
    {
        if(obj == null || (obj instanceof IssuerSerial))
            return (IssuerSerial)obj;
        if(obj instanceof ASN1Sequence)
            return new IssuerSerial((ASN1Sequence)obj);
        else
            throw new IllegalArgumentException((new StringBuilder()).append("illegal object in getInstance: ").append(obj.getClass().getName()).toString());
    }

    public static IssuerSerial getInstance(ASN1TaggedObject obj, boolean explicit)
    {
        return getInstance(ASN1Sequence.getInstance(obj, explicit));
    }

    public IssuerSerial(ASN1Sequence seq)
    {
        if(seq.size() != 2 && seq.size() != 3)
            throw new IllegalArgumentException((new StringBuilder()).append("Bad sequence size: ").append(seq.size()).toString());
        issuer = GeneralNames.getInstance(seq.getObjectAt(0));
        serial = DERInteger.getInstance(seq.getObjectAt(1));
        if(seq.size() == 3)
            issuerUID = DERBitString.getInstance(seq.getObjectAt(2));
    }

    public IssuerSerial(GeneralNames issuer, DERInteger serial)
    {
        this.issuer = issuer;
        this.serial = serial;
    }

    public GeneralNames getIssuer()
    {
        return issuer;
    }

    public DERInteger getSerial()
    {
        return serial;
    }

    public DERBitString getIssuerUID()
    {
        return issuerUID;
    }

    public DERObject toASN1Object()
    {
        ASN1EncodableVector v = new ASN1EncodableVector();
        v.add(issuer);
        v.add(serial);
        if(issuerUID != null)
            v.add(issuerUID);
        return new DERSequence(v);
    }

    GeneralNames issuer;
    DERInteger serial;
    DERBitString issuerUID;
}
