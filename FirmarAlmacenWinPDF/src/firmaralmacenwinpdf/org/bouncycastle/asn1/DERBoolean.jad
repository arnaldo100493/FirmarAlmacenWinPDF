// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   DERBoolean.java

package org.bouncycastle.asn1;

import java.io.IOException;

// Referenced classes of package org.bouncycastle.asn1:
//            ASN1Object, ASN1OctetString, DERObject, ASN1TaggedObject, 
//            DEROutputStream

public class DERBoolean extends ASN1Object
{

    public static DERBoolean getInstance(Object obj)
    {
        if(obj == null || (obj instanceof DERBoolean))
            return (DERBoolean)obj;
        else
            throw new IllegalArgumentException((new StringBuilder()).append("illegal object in getInstance: ").append(obj.getClass().getName()).toString());
    }

    public static DERBoolean getInstance(boolean value)
    {
        return value ? TRUE : FALSE;
    }

    public static DERBoolean getInstance(ASN1TaggedObject obj, boolean explicit)
    {
        DERObject o = obj.getObject();
        if(explicit || (o instanceof DERBoolean))
            return getInstance(o);
        else
            return new DERBoolean(((ASN1OctetString)o).getOctets());
    }

    public DERBoolean(byte value[])
    {
        if(value.length != 1)
        {
            throw new IllegalArgumentException("byte value should have 1 byte in it");
        } else
        {
            this.value = value[0];
            return;
        }
    }

    public DERBoolean(boolean value)
    {
        this.value = ((byte)(value ? -1 : 0));
    }

    public boolean isTrue()
    {
        return value != 0;
    }

    void encode(DEROutputStream out)
        throws IOException
    {
        byte bytes[] = new byte[1];
        bytes[0] = value;
        out.writeEncoded(1, bytes);
    }

    protected boolean asn1Equals(DERObject o)
    {
        if(o == null || !(o instanceof DERBoolean))
            return false;
        else
            return value == ((DERBoolean)o).value;
    }

    public int hashCode()
    {
        return value;
    }

    public String toString()
    {
        return value == 0 ? "FALSE" : "TRUE";
    }

    byte value;
    public static final DERBoolean FALSE = new DERBoolean(false);
    public static final DERBoolean TRUE = new DERBoolean(true);

}
