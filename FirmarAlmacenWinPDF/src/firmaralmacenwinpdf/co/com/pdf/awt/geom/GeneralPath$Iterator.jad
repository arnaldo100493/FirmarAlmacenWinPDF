// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   GeneralPath.java

package co.com.pdf.awt.geom;

import co.com.pdf.awt.geom.misc.Messages;
import java.util.NoSuchElementException;

// Referenced classes of package co.com.pdf.awt.geom:
//            PathIterator, GeneralPath, AffineTransform

class GeneralPath$Iterator
    implements PathIterator
{

    public int getWindingRule()
    {
        return p.getWindingRule();
    }

    public boolean isDone()
    {
        return typeIndex >= p.typeSize;
    }

    public void next()
    {
        typeIndex++;
    }

    public int currentSegment(double coords[])
    {
        if(isDone())
            throw new NoSuchElementException(Messages.getString("awt.4B"));
        int type = p.types[typeIndex];
        int count = GeneralPath.pointShift[type];
        for(int i = 0; i < count; i++)
            coords[i] = p.points[pointIndex + i];

        if(t != null)
            t.transform(coords, 0, coords, 0, count / 2);
        pointIndex += count;
        return type;
    }

    public int currentSegment(float coords[])
    {
        if(isDone())
            throw new NoSuchElementException(Messages.getString("awt.4B"));
        int type = p.types[typeIndex];
        int count = GeneralPath.pointShift[type];
        System.arraycopy(p.points, pointIndex, coords, 0, count);
        if(t != null)
            t.transform(coords, 0, coords, 0, count / 2);
        pointIndex += count;
        return type;
    }

    int typeIndex;
    int pointIndex;
    GeneralPath p;
    AffineTransform t;
    final GeneralPath this$0;

    GeneralPath$Iterator(GeneralPath path)
    {
        this(path, null);
    }

    GeneralPath$Iterator(GeneralPath path, AffineTransform at)
    {
        this$0 = GeneralPath.this;
        super();
        p = path;
        t = at;
    }
}
